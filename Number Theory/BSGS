// a ^ x = b (mod p)，要求模数为素数
void exgcd(ll a, ll b, ll &x, ll &y) {if(b == 0) {x = 1, y = 0; return ;} exgcd(b, a % b, y, x); y -= a / b * x;}
ll inv(ll a, ll p) {ll x, y; exgcd(a, p, x, y); return (x % p + p) % p;}
ll BSGS(ll a, ll b, ll p)
{
    map<ll, ll> mp;
    ll t = ceil(sqrt(p)), val = 1;
    for(ll i = 0; i < t; i ++)
        mp[b * val % p] = i, val = val * a % p;
    if(!(a = val)) return b == 0 ? 1 : -1;
    for(ll i = 1, val = 1; i <= t; i ++)
    {
        val = a * val % p;
        ll j = mp.count(val) ? mp[val] : -1;
        if(j >= 0 && i * t - j >= 0) return i * t - j;
    }
    return -1;
}

// 模数可以非素数
ll exBSGS(ll a, ll b, ll p)
{
    map<ll, ll> mp;
    a %= p, b %= p;
    if(b == 1 || p == 1) return 0;
    ll g = __gcd(a, p), na = 1, cnt = 0;
    while(g > 1)
    {
        if(b % g != 0) return -1;
        b /= g, p /= g, na = na * (a / g) % p, cnt ++;
        if(na == b) return cnt;
        g = __gcd(a, p);
    }
    ll ans = BSGS(a, b * inv(na, p) % p, p);
    return ans == -1 ? -1 : ans + cnt;
}

// 已知 x, b, p，求 a
ll SGSB(ll x, ll b, ll p) {
    ll g = primitive_root(p);
    return qk(g, BSGS(qk(g, x, p), b, p), p);
}