ll par[200005][21],depth[200005]ï¼›
vector<ll>adj[200005];
void dfs0(ll v,ll u){
    for(auto k:adj[v])
        if(k!=u)
            par[k][0]=v,depth[k]=depth[v]+1,dfs0(k,v);
    return ;
}
ll anc(ll v,ll k){
    for(ll i=0;(1<<i)<=k;i++)
        if(k&(1<<i))
            v=par[v][i];
    return v;
}
ll lca(ll u,ll v){
    if(depth[u]<depth[v])
        swap(u,v);
    u=anc(u,depth[u]-depth[v]);
    for(ll i=20;i>=0;i--){
        ll f1=par[u][i],f2=par[v][i];
        if(f1!=f2)
            u=f1,v=f2;
    }
    if(v==u)
        return v;
    return par[u][0];
}
void init(){
    ll i,j,k;
    depth[1]=0;
    par[1][0]=1;
    dfs0(1,0);
    for(i=1;i<=20;i++)
        for(j=1;j<=n;j++)
            par[j][i]=par[par[j][i-1]][i-1];
}
ll dis(ll a,ll b){
    ll rt=lca(a,b);
    cout<<depth[a]+depth[b]-2*depth[rt]<<endl;
}